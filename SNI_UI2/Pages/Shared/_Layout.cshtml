@using API.Controllers
@using CAPA_DATOS.Security
<!DOCTYPE html>
<html lang="en">
@{
    string identify = Context.Session.GetString("seassonKey");
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] HELPDESK</title>
    <link rel="stylesheet" href="~/css/AdminTemplate.css" />
    <script>
        function displayNav() {
            Aside.className = Aside.className.includes("navActive") ? "" : "navActive";
        }
    </script>
    <script type="module">
        import { WSecurity } from "/WDevCore/Security/WSecurity.js";
        const logout = () => {
            WSecurity.LogOut();
        }
         window.addEventListener("load", () => {
            //active nav
            document.querySelectorAll(".menu-item").forEach(item => {
                if (location.href.includes(item.id)) {
                    item.className = "active";
                }
            })
            //logOut
            btnLogOut.onclick = logout;
        })
    </script>
</head>

<body id="AdminTemplate">
    <aside id="Aside">
        <nav>
            <img src="~/Media/Image/close.webp" class="navIcon" onclick="displayNav()">
            <div class="logo-container">
                <img src="~/Media/Image/logo.png" />
            </div>
            <h3>TRANSACCIONES</h3>
            <a class="" id="Home" href="/">HOME</a>
            
            @if (SecurityController.HavePermission(Permissions.ADMINISTRAR_CASOS_DEPENDENCIA.ToString(), identify))
            {
                <a class="" id="SolicitudesPendientes" href="~/ProyectViews/SolicitudesPendientes">Solicitudes Pendientes</a>
            }
            @if (SecurityController.HavePermission(Permissions.ADMINISTRAR_CASOS_DEPENDENCIA.ToString(), identify)
            || SecurityController.HavePermission(Permissions.TECNICO_CASOS_DEPENDENCIA.ToString(), identify))
            {
                <a class="" id="Proyectos" href="~/ProyectViews/Proyectos">Casos en Proceso</a>
            }
            @if (SecurityController.HavePermission(Permissions.ADMINISTRAR_CASOS_DEPENDENCIA.ToString(), identify)
            || SecurityController.HavePermission(Permissions.TECNICO_CASOS_DEPENDENCIA.ToString(), identify))
            {
                <a class="" id="ProyectosCerrados" href="~/ProyectViews/ProyectosCerrados">Casos finalizados</a>
            }
            @if (SecurityController.HavePermission(Permissions.TECNICO_CASOS_DEPENDENCIA.ToString(), identify))
            {
                <a class="" id="Tareas" href="~/ProyectViews/Tareas">Tareas en Proceso</a>
            }
             @if (SecurityController.HavePermission(Permissions.ADMINISTRAR_USUARIOS.ToString(), identify))
            {
                <a class="" id="PerfilManager" href="~/Security/PerfilManager">Administrador de perfiles</a>
            }   
            @if (SecurityController.HavePermission(Permissions.GENERADOR_SOLICITUDES.ToString(), identify))
            {
                <a class="" id="SolicitudesRealizadas" href="~/ProyectViews/SolicitudesRealizadas">Solicitudes Realizadas</a>
            }  

            @if (SecurityController.HavePermission(Permissions.QUESTIONNAIRES_MANAGER.ToString(), identify))
            {
                <a class="" id="SolicitudesRealizadas" href="~/Questionnaires/TestsView">Gestión de tests</a>
            }  
            @if (SecurityController.HavePermission(Permissions.QUESTIONNAIRES_USER.ToString(), identify))
            {
                <a class="" id="SolicitudesRealizadas" href="~/Questionnaires/ResolveTestView">Resolver de tests</a>
            }  

             @* TEST MODULE 
            @if (SecurityController.HavePermission(Permissions.QUESTIONNAIRES_MANAGER.ToString(), identify))
            {
                <a class="" id="TestsView" href="~/Questionnaires/TestsView">Administrador de Tests</a>
            }*@
            @* <a class="" id="VinculateCaseView" href="~/ProyectViews/VinculateCaseView">Casos vinculados</a> *@

        </nav>
    </aside>

    <header id="Header" class="admin-header">
        <img src="~/Media/Image/navIcon.png" class="navIcon" onclick="displayNav()">
        <div class="title-container">
            <label for="" class="title">HELPDESK</label>
            <label for="" class="sub-title">Sistema de ayuda</label>
        </div>

        @if (SecurityController.IsAdmin(identify))
        {
            <a href="~/Admin/Index">Admin Panel</a>
        }
        @if (SecurityController.HavePermission(Permissions.PERFIL_ACCESS.ToString(), identify))
        {
            <a class="" href="~/Security/PerfilView">Perfil</a>
        }
        <a href="#" id="btnLogOut">Cerrar Sesión</a>
    </header>
    <div class="background"></div>

    <div id="MainContainer">
        <main role="main" id="Main">
            @RenderBody()
        </main>
    </div>
    @await RenderSectionAsync("Scripts", required: false)
    <script>
        if (sessionStorage.getItem("menu_active") == null) {
            sessionStorage.setItem("menu_active", "PrestamosClientesMenu")
        }
        const changeActive = (target) => {
            if (target.className.includes("active-title")) {
                target.className = target.className.replace("active-title", "")
                sessionStorage.removeItem("menu_active")
            }
            else {
                target.className = target.className + ' active-title';
                sessionStorage.setItem("menu_active", target.id);
            }
        }
        const menuActive = document.querySelector("#" + sessionStorage.getItem("menu_active"));
        if (menuActive) {
            changeActive(menuActive)
        }

    </script>
</body>

</html>
